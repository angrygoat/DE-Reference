---

- name: add the docker group
  sudo: yes
  group: name=docker state=present
  tags: docker

- name: add the docker user
  sudo: yes
  user: name=docker shell=/bin/bash groups=docker append=yes
  tags: docker

- name: add the current user to the docker group
  sudo: yes
  user: name={{ ansible_ssh_user }} groups=docker append=yes
  tags: docker

- name: copy docker.repo
  copy: src=docker.repo dest=/etc/yum.repos.d owner=root group=root mode=0644 
  tags: docker

- name: RHEL-based systems will want brctl
  yum: name=bridge-utils state=latest
  tags: docker

- name: place docker0 bridge file
  copy: src=ifcfg-docker0 dest=/etc/sysconfig/network-scripts owner=root group=root mode=0644
  tags: docker

- name: ifup docker0
  shell: "/usr/sbin/ifup ifcfg-docker0"
  tags: docker

- name: install docker-engine
  yum: name=docker-engine state=latest
  tags: docker

- name: install docker-py for logins
  pip:
    name: "{{ item }}"
    state: present
  with_items:
    - docker-py>=1.2.3
    - six>=1.4.0
  tags: docker

- name: place the docker-compose yaml file
  sudo: yes
  template: src=compose.yaml.j2 dest=/etc/compose.yaml owner=root group=root mode=0644 force=yes
  tags: docker-compose

- name: Place updated docker.service file
  sudo: yes
  copy: src=docker.service dest=/usr/lib/systemd/system/ group=root owner=root mode=0664
  tags:
      - update_service_files

- name: reload systemd
  sudo: yes
  shell: "/usr/bin/systemctl daemon-reload"
  tags: docker

- name: enable and start docker-engine
  service: name=docker state=restarted enabled=yes
  tags: docker

- name: Add the condor user to the docker group
  user: name=condor groups=docker append=yes
  when: "'condor' in group_names"  
  tags:
      - config

- name: install/update docker-compose
  sudo: yes
  get_url: url=https://github.com/docker/compose/releases/download/1.8.0/docker-compose-Linux-x86_64 dest=/usr/bin/docker-compose mode=0755 owner=docker group=docker validate_certs=no
  tags:
      - install_docker-compose

- name: enable docker
  sudo: yes
  service: name=docker enabled=yes
  tags: 
      - enable_docker

- name: restart docker
  sudo: yes
  service: name=docker state=started enabled=yes
  tags: 
      - restart_docker

