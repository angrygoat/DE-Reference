- name: ldap Make an ansible directory for remembering what we previously run
  file: path={{ ldap_done_dir }} state=directory owner=root group=root
  tags:
    - ldap
    - auth

- name: Delete the configuration directory
  file: path={{ ldap.conf_dir }}/slapd.d state=absent
  tags:
    - ldap
    - auth

- name: Generate the root password for ldap
  shell: slappasswd -s {{ ldap.admin_password }}
  register: root_password
  tags:
    - ldap
    - auth

- name: Copy the slapd.conf configuration file for Redhat
  template: src=slapd.conf.j2 dest={{ ldap.conf_dir }}/slapd.conf
  when: ansible_os_family == "RedHat"
  notify:
   - restart slapd
  tags:
    - ldap
    - auth

- name: Copy the ldap.conf configuration file
  template: src=ldap.conf.j2 dest={{ ldap.conf_dir }}/ldap.conf
  tags:
    - ldap
    - auth

- name: Create the directory for ldap database
  file: path=/var/lib/ldap/{{ ldap.domain_name }}/ state=directory owner={{ ldap.user }} group={{ ldap.user }}
  tags:
    - ldap
    - auth

- name: Create the directory for ldap certificates
  file: path={{ ldap.conf_dir }}/certs/ state=directory owner={{ ldap.user }} group={{ ldap.user }}
  tags:
    - ldap
    - auth

- name: Generate the private key for certificate request
  shell: openssl genrsa -des3 -passout pass:password -out my1.key 1024 chdir={{ ldap.conf_dir }}/certs/ 
         creates={{ ldap.conf_dir}}/certs/my1.key
  tags:
    - ldap
    - auth

- name: Strip the passphrase from the key 
  shell: openssl rsa -in my1.key -passin pass:password -out my.key chdir={{ ldap.conf_dir }}/certs/ 
         creates={{ ldap.conf_dir }}/certs/my.key
  tags:
    - ldap
    - auth

- name: Create and sign the the new certificate 
  shell: openssl req -new -x509 -subj '/C={{ ldap.country }}/ST={{ ldap.state }}/L={{ ldap.location }}/O={{ ldap.organization }}/CN={{ ansible_hostname }}/' -days 3650 -key my.key -out cert.crt -extensions v3_ca chdir={{ ldap.conf_dir }}/certs/
         creates={{ ldap.conf_dir }}/certs/cert.crt
  tags:
    - ldap
    - auth

- name: copy the supporting files
  copy: src=ldap dest=/etc/sysconfig/ldap mode=0755
  #when: ldap.enable_ssl and ansible_os_family == 'RedHat'
  when: ansible_os_family == 'RedHat'
  notify: 
   - restart slapd
  tags:
    - ldap
    - auth

- name: restart the slapd service
  service: name=slapd state=restarted enabled=yes 
  tags:
    - ldap
    - auth

- name: Copy the template for creating base dn
  template: src=domain.ldif dest=/tmp
  tags:
    - ldap
    - auth

- name: add the base domain
  #shell: ldapadd -x -D "cn=Manager,dc={{ ldap.domain_name.split('.')[0] }},dc={{ ldap.domain_name.split('.')[1] }}" -w {{ ldap.password }} -f /tmp/domain.ldif && touch {{ ldap.conf_dir }}/rootdn_created creates={{ ldap.conf_dir }}/rootdn_created
  shell: ldapadd -x -D "{{ ldap.manager_dn }}" -w {{ ldap.password }} -f /tmp/domain.ldif && touch {{ ldap_done_dir }}/rootdn_created creates={{ ldap.conf_dir }}/rootdn_created
  ignore_errors: yes
  tags:
    - ldap
    - auth
