---

# assume prereqs.yaml has already installed/configured postgres. otherwise, include postgres.yaml
#- include: postgres.yaml

- name: create user for the de database
  postgresql_user: name={{db_user}} password={{db_password}} state=present login_host={{db_host}} port={{db_port}} login_user={{db_admin}} login_password={{db_admin_password}} role_attr_flags=CREATEDB,NOCREATEROLE,NOCREATEUSER
  tags:
    - de_database
  ignore_errors: yes # done to allow rerunability


- name: create the de database
  postgresql_db: name={{db_name}} state=present login_host={{db_host}} port={{db_port}} login_user={{db_user}} login_password={{db_password}} owner={{db_user}}
  register: postgresql_db_result
  tags:
    - de_database

- name: set public schema ownership
  postgresql_privs: >
    db={{db_name}}
    privs=ALL
    objs=public
    type=schema
    roles={{db_user}}
    grant_option=yes
    host={{db_host}}
    port={{db_port}}
    login={{db_admin}}
    password={{db_admin_password}}
  tags:
    - de_database

- name: create user for the permissions database
  postgresql_user: name={{permissions_db_user}} password={{permissions_db_password}} state=present login_host={{permissions_db_host}} port={{permissions_db_port}} login_user={{db_admin}} login_password={{db_admin_password}} role_attr_flags=CREATEDB,NOCREATEROLE,NOCREATEUSER
  tags:
    - permissions_database
  ignore_errors: yes # done to allow rerunability


- name: create the permissions database
  postgresql_db: name={{permissions_db_name}} state=present login_host={{permissions_db_host}} port={{permissions_db_port}} login_user={{permissions_db_user}} login_password={{permissions_db_password}} owner={{permissions_db_user}}
  register: postgresql_db_result
  tags:
    - permissions_database

- name: set public schema ownership for the permissions db
  postgresql_privs: >
    db={{permissions_db_name}}
    privs=ALL
    objs=public
    type=schema
    roles={{permissions_db_user}}
    grant_option=yes
    host={{permissions_db_host}}
    port={{permissions_db_port}}
    login={{db_admin}}
    password={{db_admin_password}}
  tags:
    - permissions_database

- name: create user for the notification database
  postgresql_user: name={{notification_db_user}} password={{notification_db_password}} state=present login_host={{notification_db_host}} port={{notification_db_port}} login_user={{db_admin}} login_password={{db_admin_password}} role_attr_flags=CREATEDB,NOCREATEROLE,NOCREATEUSER
  tags:
    - notification_database
  ignore_errors: yes # done to allow rerunability


- name: create the notification database
  postgresql_db: name={{notification_db_name}} state=present login_host={{notification_db_host}} port={{notification_db_port}} login_user={{notification_db_user}} login_password={{notification_db_password}} owner={{notification_db_user}}
  register: postgresql_db_result
  tags:
    - notification_database

- name: set public schema ownership for the notification db
  postgresql_privs: >
    db={{notification_db_name}}
    privs=ALL
    objs=public
    type=schema
    roles={{notification_db_user}}
    grant_option=yes
    host={{notification_db_host}}
    port={{notification_db_port}}
    login={{db_admin}}
    password={{db_admin_password}}
  tags:
    - notification_database

- name: create user for the metadata database
  postgresql_user: name={{metadata_db_user}} password={{metadata_db_password}} state=present login_host={{metadata_db_host}} port={{metadata_db_port}} login_user={{db_admin}} login_password={{db_admin_password}} role_attr_flags=CREATEDB,NOCREATEROLE,NOCREATEUSER
  tags:
    - metadata_database
  ignore_errors: yes # done to allow rerunability

- name: create the metadata database
  postgresql_db: name={{metadata_db_name}} state=present login_host={{metadata_db_host}} port={{metadata_db_port}} login_user={{metadata_db_user}} login_password={{metadata_db_password}} owner={{metadata_db_user}}
  register: postgresql_db_result
  tags:
    - metadata_database

- name: set public schema ownership for the metadata db
  postgresql_privs: >
    db={{metadata_db_name}}
    privs=ALL
    objs=public
    type=schema
    roles={{metadata_db_user}}
    grant_option=yes
    host={{metadata_db_host}}
    port={{metadata_db_port}}
    login={{db_admin}}
    password={{db_admin_password}}
  tags:
    - metadata_database
